package com.nt.niranjana.controller;

import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.nt.niranjana.entity.User;
import com.nt.niranjana.payload.UserRequest;
import com.nt.niranjana.payload.UserResponse;
import com.nt.niranjana.service.IUserService;
import com.nt.niranjana.util.JwtUtil;



@RestController
@RequestMapping("/user")
public class UserRestController
{
	
	@Autowired
	private AuthenticationManager authenticationManager;

	@Autowired
	private IUserService service;
	
	@Autowired
	private JwtUtil util;
	
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest) 
	{
		
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(userRequest.getUsername(),userRequest.getPassword()));
		
		String token = util.generateToken(userRequest.getUsername());
		
		return ResponseEntity.ok(new UserResponse(token, "Generated By Dev_Niranjana"));
	}
	
	@GetMapping("/tokenDetails")
	public ResponseEntity<UserResponse> getTokenDetailss(@RequestHeader("Token") String token)
	{
		util.getTokenDetails(token);
		return ResponseEntity.ok(new UserResponse(token, "Generated By Dev_Niranjana"));
	}
	
	@PostMapping("/create")
	public ResponseEntity<String> saveUser(@RequestBody User user) 
	{
		service.saveUser(user);
		//return new ResponseEntity<String>("User created", HttpStatus.OK);
		return ResponseEntity.ok("User created");
	}
	
	@PostMapping("/loggedUserIs")
	public ResponseEntity<String> showUserData(Principal p) 
	{
		System.out.println(p.getClass().getName());
		return ResponseEntity.ok("Hello :" + p.getName());
	}
	
	
	
}
